version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: underwater_navigation_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: underwater_nav_2025
      MONGO_INITDB_DATABASE: underwater_navigation
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - underwater_nav_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-server:
    build: .
    container_name: underwater_navigation_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      MONGODB_URL: mongodb://admin:underwater_nav_2025@mongodb:27017/
      DATABASE_NAME: underwater_navigation
      HOST: 0.0.0.0
      PORT: 8000
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - underwater_nav_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: MongoDB Express for database management
  mongo-express:
    image: mongo-express:1.0.0
    container_name: underwater_navigation_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: underwater_nav_2025
      ME_CONFIG_MONGODB_URL: mongodb://admin:underwater_nav_2025@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - underwater_nav_network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  underwater_nav_network:
    driver: bridge
